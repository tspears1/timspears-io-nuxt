@use '@/assets/scss/abstracts/' as *;

$dark-list: var(--c-theme-001), var(--c-theme-003), var(--c-theme-005), var(--c-theme-007), var(--c-theme-009), var(--c-theme-011);
$light-list: var(--c-theme-012), var(--c-theme-010), var(--c-theme-008), var(--c-theme-006), var(--c-theme-005), var(--c-theme-002);

.button {
    $b: &;

    --button-border-size: 2px;
    --button-color: var(--c-theme-001);
    --button-stroke: var(--c-theme-001);
    --button-padding-x: 1.1rem;
    --button-padding-y: 0;
    --button-panel-size: 3.75rem;
    --button-height: calc(var(--button-panel-size) - (var(--button-border-size) * 2));
    --button-content-easing: var(--ease-out-cubic);
    --button-panel-easing: var(--ease-out-cubic);
    --button-timing-out: var(--duration-gentle);
    --button-timing-in: var(--duration-gentle);
    @include grid-content( center center);
    background: transparent;
    border: 2px solid var(--button-stroke);
    display: grid;
    grid-template-columns: 1fr var(--button-panel-size);
    grid-template-rows: var(--button-height);
    position: relative;
    width: calc(var(--button-panel-size) * var(--button-panel-count));
    z-index: 1;

    @include hover-style(mouse) {
        cursor: pointer;

        #{$b}__panel {
            background-position-y: 100%;
            transform: scaleY(1);
            transition: background-position var(--button-timing-in) var(--button-panel-easing) calc(100ms * var(--button-panel-index));
        }
    }

    &[data-active="true"] {
        #{$b}__panel {
            background-position-y: 100%;
            transform: scaleY(1);
            transition: background-position var(--button-timing-in) var(--button-panel-easing) calc(100ms * var(--button-panel-index));
        }
    }

    &[data-theme="light"] {
        --button-color: var(--c-theme-012);
        --button-stroke: var(--c-theme-012);

        &[data-active="true"],
        &:hover {
            --button-color: var(--c-theme-001);
            --icon-center: var(--c-theme-001);
        }
    }

    &[data-size="compressed"] {
        --button-panel-size: 2.875rem;
    }

    &:where(:not(.button--naked)) {
        .button__text + .button__icon {
            border-left: 2px solid var(--button-stroke);
        }
    }

    &__panels {
        @include absolute(-2px x x -2px);
        display: grid;
        grid-template-columns: repeat(var(--button-panel-count), var(--button-panel-size));
        grid-template-rows: var(--button-panel-size);
        justify-content: end;
        overflow: clip;
        overflow: hidden;
        z-index: -1;
    }

    &__panel {
        background-position-y: -100%;
        background-repeat: no-repeat;
        background-size: 100% calc(var(--button-panel-size) * 7);
        display: block;
        grid-column: var(--button-panel-index) / span 1;
        grid-row: 1 / span 1;
        height: var(--button-panel-size);
        transform: scaleY(-1) translateZ(0);
        transition: background-position var(--button-timing-out) var(--button-panel-easing) calc(100ms * (var(--button-panel-index) - 1));

        [data-theme="dark"] & {
            @include step-gradient($dark-list);
        }

        [data-theme="light"] & {
            @include step-gradient($light-list);
        }
    }

    &__text {
        @include modern-text(500);
        color: var(--button-color);
        display: grid;
        font-size: 0.875rem;
        grid-column: 1 / span 1;
        grid-row: 1 / span 1;
        letter-spacing: 0.1em;
        line-height: 1;
        padding: var(--button-padding-y) var(--button-padding-x);
        place-items: center;
        text-transform: uppercase;
        transition: color var(--button-timing-out) var(--button-content-easing);
    }

    &__icon {
        color: var(--button-color);
        display: grid;
        grid-column: 2 / span 1;
        grid-row: 1 / span 1;
        padding: var(--button-padding-y) var(--button-padding-x);
        place-items: center;
        transition: color var(--button-timing-out) var(--button-content-easing);
        width: max(var(--button-height), 100%);
    }

    &__icon-wrapper {
        @include svg-contain($width: auto, $height: 1rem);
        display: grid;
        place-items: center;

        [data-size="compressed"] & {
            height: 0.5rem;
        }
    }
}